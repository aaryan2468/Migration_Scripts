# Import the SharePoint Online PowerShell module
# Install-Module -Name PnP.PowerShell -Force -AllowClobber
# Import-Module PnP.PowerShell -DisableNameChecking

# Function to get all items count from a document library including subfolders
function Get-DocumentLibraryItemCount {
    param (
        [string]$SiteURL,
        [string]$DocumentLibraryName,
        [pscredential]$Credentials
    )

    try {
        # Connect to the site
        Connect-PnPOnline -Url $SiteURL -Credentials $Credentials

        # Get the count of items
        $ItemCount = (Get-PnPListItem -List $DocumentLibraryName -PageSize 5000).Count

        # Output the data
        $result = [PSCustomObject]@{
            SiteURL = $SiteURL
            DocumentLibraryName = $DocumentLibraryName
            ItemCount = $ItemCount
        }
        
        Write-Host "ItemCount for library '$DocumentLibraryName' on site '$SiteURL': $ItemCount" -ForegroundColor Green

        return $result
    } 
    catch {
        Write-Host "Error getting item count for library '$DocumentLibraryName' on site '$SiteURL': $_" -ForegroundColor Red
    }
    finally {
        # Disconnect from SharePoint Online
        Disconnect-PnPOnline
    }
}

# Function to calculate the size of SharePoint Online items in a document library including subfolders
function Get-SPOnlineDocumentLibrarySize {
    param (
        [string]$SiteUrl,
        [string]$ListName,
        [pscredential]$Credentials
    )

    try {
        # Connect to SharePoint Online using provided credentials
        Connect-PnPOnline -Url $SiteUrl -Credentials $Credentials

        # Initialize a variable to store the total size
        $totalSizeGB = 0

        # Retrieve all items from the document library including subfolders
        $listItems = Get-PnPListItem -List $ListName -PageSize 5000

        # Loop through each item
        foreach ($item in $listItems) {
            # Get the file size in bytes
            $fileSizeBytes = $item["File_x0020_Size"]

            if ($fileSizeBytes) {
                # Convert bytes to gigabytes
                $fileSizeGB = $fileSizeBytes / 1GB

                # Add to the total size
                $totalSizeGB += $fileSizeGB
            }
        }

        # Output the data
        $result = [PSCustomObject]@{
            SiteURL = $SiteUrl
            DocumentLibraryName = $ListName
            SizeGB = $totalSizeGB
        }
        
        Write-Host "Size for library '$ListName' on site '$SiteUrl': $totalSizeGB GB" -ForegroundColor Green

        return $result
    }
    catch {
        Write-Host "Error getting size for library '$ListName' on site '$SiteUrl': $_" -ForegroundColor Red
    }
    finally {
        # Disconnect from SharePoint Online
        Disconnect-PnPOnline
    }
}

# Get Credentials
$Username = "sharepoint.admin6@infoblox.com"
$Password = Read-Host -Prompt "Enter the password for $Username" -AsSecureString
$Credentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $Username, $Password

# Read CSV file
$CSVData = Import-Csv "C:\Users\vpoojari\OneDrive - Infoblox Inc\Desktop\Ganeshsite.csv"

# Array to store results
$results = @()

# Loop through each row in the CSV
foreach ($Row in $CSVData) {
    # Extract data from CSV
    $SiteURL = $Row.SiteURL
    $DocumentLibraryName = $Row.DocumentLibraryName

    # Call function to get item count
    $itemCountResult = Get-DocumentLibraryItemCount -SiteURL $SiteURL -DocumentLibraryName $DocumentLibraryName -Credentials $Credentials

    if ($itemCountResult -ne $null) {
        # Call function to get size
        $sizeResult = Get-SPOnlineDocumentLibrarySize -SiteUrl $SiteURL -ListName $DocumentLibraryName -Credentials $Credentials

        if ($sizeResult -ne $null) {
            # Add sum to the results
            $results += [PSCustomObject]@{
                SiteURL = $SiteURL
                DocumentLibraryName = $DocumentLibraryName
                ItemCount = $itemCountResult.ItemCount
                SizeGB = $sizeResult.SizeGB
            }
        }
    }
}

# Display results in console
$results | Format-Table -AutoSize

# Export results to CSV
$results | Export-Csv -Path "C:\Users\vpoojari\OneDrive - Infoblox Inc\Desktop\ExportedData.csv" -NoTypeInformation
Write-Host "Data Exported To Csv File" -ForegroundColor Green
