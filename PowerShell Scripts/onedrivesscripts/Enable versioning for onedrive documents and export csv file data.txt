# Define the path to the CSV file
$csvPath = "C:\Users\vpoojari\OneDrive - Infoblox Inc\Desktop\versionenable and disable.csv"

# Import the CSV file
$sites = Import-Csv -Path $csvPath

# Store credentials
$username = "sharepoint.admin6@infoblox.com"
$password = ConvertTo-SecureString "Peddaupparapalli@3636" -AsPlainText -Force
$credentials = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $username, $password

# Initialize a list to store the results
$results = @()

# Loop through each site in the CSV file
foreach ($site in $sites) {
    try {
        # Connect to the site using stored credentials
        Connect-PnPOnline $site.SiteUrl -Credentials $credentials

        # Set versioning settings of the List
        Set-PnPList -Identity $site.LibraryName -EnableVersioning $True
        Write-Host "Versioning Enabled for $($site.SiteUrl) /$($site.LibraryName)."

        # Add success message to the results
        $results += [PSCustomObject]@{
            SiteUrl = $site.SiteUrl
            LibraryName = $site.LibraryName
            Status = "Success"
            Message = "Versioning settings for $($site.LibraryName) successfully updated."
        }
    }
    catch {
        # If an error occurs, add the error message to the results
        $results += [PSCustomObject]@{
            SiteUrl = $site.SiteUrl
            LibraryName = $site.LibraryName
            Status = "Error"
            Message = $_.Exception.Message
        }
    }
}

# Define the path for the log file
$logFilePath = "C:\Users\vpoojari\OneDrive - Infoblox Inc\Desktop\versioninglog.txt"

# Write log entries to the log file
foreach ($result in $results) {
    $logEntry = "$($result.SiteUrl) / $($result.LibraryName): $($result.Status) - $($result.Message)"
    Add-Content -Path $logFilePath -Value $logEntry
}

# Define the path for the results CSV file
$resultsCsvPath = "C:\Users\vpoojari\OneDrive - Infoblox Inc\Desktop\versioningresults.csv"

# Export the results to a CSV file
$results | Export-Csv -Path $resultsCsvPath -NoTypeInformation

Write-Host "Process completed. Check the log file and results CSV for details."
