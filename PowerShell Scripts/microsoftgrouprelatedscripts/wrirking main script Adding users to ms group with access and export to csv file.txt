# Import the necessary modules
Import-Module ExchangeOnlineManagement

# Connect to Exchange Online using modern authentication
Connect-ExchangeOnline -UserPrincipalName "sharepoint.admin6@infoblox.com" -ShowProgress $true

# Load CSV file data
$csvData = Import-Csv -Path "C:\Users\vpoojari\OneDrive - Infoblox Inc\Desktop\Groupsecondtime.csv"

# Initialize counter for progress reporting
$counter = 0
$totalGroups = $csvData.Count

# Initialize result list
$resultList = @()

# Define function to create or retrieve Microsoft 365 group
function Manage-M365Group {
    param(
        [string]$GroupName,
        [string]$OwnerEmail
    )

    try {
        # Function to sanitize group name for alias
        function Sanitize-GroupName {
            param(
                [string]$Name
            )
            $sanitized = $Name.Replace(" ", "") # Replace spaces with hyphens for alias
            return $sanitized
        }

        $Alias = Sanitize-GroupName -Name $GroupName

        # Check if the new group already exists
        $existingGroup = Get-UnifiedGroup -Identity $GroupName -ErrorAction SilentlyContinue
        if ($existingGroup -eq $null) {
            Write-Host "The specified new group '$GroupName' doesn't exist. Creating the group..."
            # Create the new group
            try {
                $newGroup = New-UnifiedGroup -DisplayName $GroupName -Alias $Alias -AccessType Private -AutoSubscribeNewMembers -Verbose
            } catch {
                Write-Host "Error occurred while creating the new group '$GroupName': $_"
                return $null
            }
            if ($newGroup -eq $null) {
                Write-Host "Error: Failed to create the new group '$GroupName'."
                return $null
            }
            Write-Host "New group '$GroupName' created successfully."
        } else {
            Write-Host "The group '$GroupName' already exists."
            $newGroup = $existingGroup
        }

        # Return the created or retrieved group
        return $newGroup
    } catch {
        $errorMessage = $_.Exception.Message
        Write-Host "Error occurred while managing group '$GroupName': $errorMessage" -ForegroundColor Red
        return $null
    }
}

# Loop through each row in CSV
foreach ($row in $csvData) {
    $counter++
    Write-Progress -Activity "Processing Groups" -Status "Processing group $counter of $totalGroups" -PercentComplete ($counter / $totalGroups * 100)

    $GroupName = $row.GroupName
    $OwnerEmail = $row.Owner
    $Member = $row.Member

    # Call function to manage M365 group
    $group = Manage-M365Group -GroupName $GroupName -OwnerEmail $OwnerEmail
    if ($group -eq $null) {
        Write-Host "Error occurred while managing group '$GroupName'." -ForegroundColor Red
        # Log error to a file
        Add-Content -Path "error.log" -Value "Error occurred while managing group '$GroupName'."
        continue
    }

    # Check if welcome email is enabled
    $welcomeEmailEnabled = Get-UnifiedGroup -Identity $group.DisplayName | Select-Object -ExpandProperty WelcomeMessageEnabled

    if ($welcomeEmailEnabled) {
        Write-Host "Welcome email is enabled for group: $($group.DisplayName)." -ForegroundColor Yellow
    } else {
        Write-Host "Welcome email is not enabled for group: $($group.DisplayName)."
    }

    # Disable welcome email to owner
    Set-UnifiedGroup -Identity $group.DisplayName -UnifiedGroupWelcomeMessageEnabled:$false -HiddenFromAddressListsEnabled:$true -HiddenFromExchangeClientsEnabled:$true
    Write-Host "Welcome emails disabled for group $($group.DisplayName)." -ForegroundColor Green

    # Check if group hidden  
    $Hidden = Get-UnifiedGroup -Identity $group.DisplayName | Select-Object -ExpandProperty HiddenFromAddressListsEnabled

    if ($Hidden) {
        Write-Host "Group is hidden - $($group.DisplayName)." -ForegroundColor Green
    } else {
        Write-Host "Group not hidden: $($group.DisplayName)."
    }

    # Hide the group
    Set-UnifiedGroup -Identity $group.DisplayName -HiddenFromAddressListsEnabled:$true -HiddenFromExchangeClientsEnabled:$true
    Write-Host "Group hidden: $($group.DisplayName)." -ForegroundColor Green

    # Add owner as a member to Microsoft 365 group if not already a member
    if ($group.Members -notcontains $OwnerEmail) {
        Add-UnifiedGroupLinks -Identity $group.DisplayName -LinkType member -Links $OwnerEmail
        Write-Host "Owner $OwnerEmail added as a member to group $($group.DisplayName)." -ForegroundColor Green
    } else {
        Write-Host "Owner $OwnerEmail is already a member of group $($group.DisplayName)." -ForegroundColor Yellow
    }

    # Add member to Microsoft 365 group if not already a member
    try {
        Add-UnifiedGroupLinks -Identity $group.DisplayName -LinkType member -Links $Member -ErrorAction Stop
        Write-Host "Member $Member added as a member to group $($group.DisplayName)." -ForegroundColor Green
    } catch {
        if ($_.Exception.Message -match "MailboxUserNotFoundException") {
            Write-Host "Error: Mailbox user '$Member' not found. Skipping." -ForegroundColor Yellow
        } else {
            Write-Host "Error occurred while adding member '$Member' to group $($group.DisplayName): $($_.Exception.Message)" -ForegroundColor Red
        }
    }

    # Add owner to Microsoft 365 group
    Add-UnifiedGroupLinks -Identity $group.DisplayName -LinkType owner -Links $OwnerEmail
    Write-Host "Owner $OwnerEmail added to group $($group.DisplayName)." -ForegroundColor Green

    # Check if $row.Member is Sysops@infoblox.com
    if ($row.Member -eq "Sysops@infoblox.com") {
        # Add specified members to the group
        $additionalMembers = "svenugopala@infoblox.com", "amathew@infoblox.com", "ddinkha@infoblox.com","echoi@infoblox.com","gputhran@infoblox.com","nmokka@infoblox.com","snagarajan@infoblox.com"
        foreach ($additionalMember in $additionalMembers) {
            # Add member to Microsoft 365 group if not already a member
            try {
                Add-UnifiedGroupLinks -Identity $group.DisplayName -LinkType member -Links $additionalMember -ErrorAction Stop
                Write-Host "Member $additionalMember added as a member to group $($group.DisplayName)." -ForegroundColor Green
            } catch {
                if ($_.Exception.Message -match "MailboxUserNotFoundException") {
                    Write-Host "Error: Mailbox user '$additionalMember' not found. Skipping." -ForegroundColor Yellow
                } else {
                    Write-Host "Error occurred while adding member '$additionalMember' to group $($group.DisplayName): $($_.Exception.Message)" -ForegroundColor Red
                }
            }
        }
    }

    # Collect the result
    $resultList += [PSCustomObject]@{
        GroupName = $GroupName
        OwnerEmail = $OwnerEmail
        Member = $Member
        WelcomeEmailEnabled = $welcomeEmailEnabled
        GroupHidden = $Hidden
        Status = "Processed"
    }
}

Write-Host "Processing complete."

# Export results to a CSV file
$resultList | Export-Csv -Path "C:\Users\vpoojari\OneDrive - Infoblox Inc\Desktop\secondtimeexporting.csv" -NoTypeInformation -Encoding UTF8

